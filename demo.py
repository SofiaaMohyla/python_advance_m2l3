from sqlalchemy import create_engine, Column, Integer, String
from sqlalchemy.orm import declarative_base, sessionmaker, Session

# üíæ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
DATABASE_URL = "sqlite:///./test1.db"
engine = create_engine(DATABASE_URL, connect_args={"check_same_thread": False}, echo=True)
SessionLocal = sessionmaker(bind=engine, autoflush=False, autocommit=False)
Base = declarative_base()


# üë§ –ú–æ–¥–µ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
class User(Base):
    __tablename__ = "users"

    id = Column(Integer, primary_key=True, index=True)
    name = Column(String, unique=True, index=True)


# üß± –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å
def init_db():
    Base.metadata.create_all(bind=engine)


# üîÑ –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–µ—Å—ñ—ó (—Ä—É—á–Ω–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ get_db)
def get_session() -> Session:
    return SessionLocal()


# ‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def create_user(name: str):
    db = get_session()
    user = User(name=name)
    db.add(user)
    db.commit()
    db.refresh(user)
    db.close()
    #print(f"[+] –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:  - {user.name}")


# üìã –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
def list_users():
    db = get_session()
    users = db.query(User).all()
    db.close()
    print("[üìã] –í—Å—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:")
    for user in users:
        print(f"{user.id}: {user.name}")


# üîç –ó–Ω–∞–π—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ —ñ–º'—è–º
def find_user(name: str):
    db = get_session()
    user = db.query(User).filter(User.name == name).first()
    db.close()
    if user:
        print(f"[üîç] –ó–Ω–∞–π–¥–µ–Ω–æ: {user.id} - {user.name}")
    else:
        print("[‚ùå] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")


# ‚úèÔ∏è –û–Ω–æ–≤–∏—Ç–∏ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def update_user(user_id: int, new_name: str):
    db = get_session()
    user = db.query(User).filter(User.id == user_id).first()
    if user:
        user.name = new_name
        db.commit()
        print(f"[‚úèÔ∏è] –û–Ω–æ–≤–ª–µ–Ω–æ: ID {user_id} ‚Üí {new_name}")
    else:
        print("[‚ùå] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
    db.close()


# ‚ùå –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def delete_user(user_id: int):
    db = get_session()
    user = db.query(User).filter(User.id == user_id).first()
    if user:
        db.delete(user)
        db.commit()
        print(f"[üóëÔ∏è] –í–∏–¥–∞–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID {user_id}")
    else:
        print("[‚ùå] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
    db.close()


# üß™ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏
if __name__ == "__main__":
    #Base.metadata.create_all(bind=engine)

    #create_user("Alice2")
     create_user("Bob")

    # list_users()

    # find_user("Alice")

    # update_user(1, "Alicia")

    # delete_user(2)

    # list_users()
